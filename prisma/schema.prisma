// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Aluno {
  id          Int         @id @default(autoincrement())
  nome        String
  matricula   String      @unique
  curso       String
  estandeId   Int         @map("estande_id")
  estande     Estande     @relation(fields: [estandeId], references: [id])
  avaliacoes  Avaliacao[]
}

model Professor {
  id          Int         @id @default(autoincrement())
  nome        String
  matricula   String      @unique
  area        String
  avaliacoes  Avaliacao[]
}

model Avaliacao {
  id        Int         @id @default(autoincrement())

  idAluno   Int?        @map("aluno_id")
  aluno     Aluno?      @relation(fields: [idAluno], references: [id])

  idProf    Int?        @map("prof_id")
  professor Professor?  @relation(fields: [idProf], references: [id])

  // Os campos com id do professor e do aluno estão opcional, porque não tem como registrar de uma forma que os dois ocupem o mesmo campo.
  // Assim como a avaliação deve ser feita ou por um, ou pelo outro, apenas um deles. Sendo isso uma regra de negócio, o Prisma não possui suporte.

  estandeId Int         @map("estande_id")
  estande   Estande     @relation(fields: [estandeId], references: [id])
  criterios Criterio[]
}

model Estande {
  id          Int         @id @default(autoincrement())
  nomeGrupo   String 
  membros     Aluno[]
  avaliacoes  Avaliacao[]
}

model Criterio {
  id          Int         @id @default(autoincrement())
  nome        String // Ex.: Falatória, inovação, apresentação, clareza, etc.
  descricao   String
  nota        Float
  avaliacaoId Int
  avaliacao   Avaliacao?  @relation(fields: [avaliacaoId], references: [id])
}

// write me a json body to do a post request for each of these models above
// Estande:
// {
//   "nomeGrupo": "Grupo 1",
// }

// Aluno:
// {
//   "nome": "Maria",
//   "matricula": "2019001111",
//   "curso": "Engenharia de Software",
//   "estandeId": 1
// }

// Professor:
// {
//   "nome": "João",
//   "matricula": "2019002222",
//   "area": "Ciência da Computação"
// }

// Avaliação 1:
// {
//   "idAluno": 1,
//   "estandeId": 1
// }

// Avaliação 2:
// {
//   "idProf": 1,
//   "estandeId": 1
// }

// Criterio 1 Avaliação 1:
// {
//   "nome": "Falatória",
//   "descricao": "Avaliação da falatória do grupo",
//   "nota": 10,
//   "avaliacaoId": 1
// }

// Criterio 2 Avaliação 1:
// {
//   "nome": "Inovação",
//   "descricao": "Avaliação da inovação do grupo",
//   "nota": 10,
//   "avaliacaoId": 1
// }

// Criterio 1 Avaliação 2:
// {
//   "nome": "Falatória",
//   "descricao": "Avaliação da falatória do grupo",
//   "nota": 10,
//   "avaliacaoId": 2
// }

// Criterio 2 Avaliação 2:
// {
//   "nome": "Inovação",
//   "descricao": "Avaliação da inovação do grupo",
//   "nota": 10,
//   "avaliacaoId": 2
// }